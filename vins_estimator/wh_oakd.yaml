%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1
num_of_cam: 2

output_path: "/home/pi/Documents"

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

#this is based on ros axis, x = front, y = left
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0, 0, 1, 0,
           -1, 0, 0, 0,
           0, -1, 0, 0,
           0, 0, 0, 1 ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0, 0, 1, 0,
           -1, 0, 0, -0.0748161,
           0, -1, 0, 0,
           0, 0, 0, 1 ]

#Multiple thread support
multiple_thread: 1

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.0628          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.00298         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.02246         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.00289       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.7890191   # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
